#应用或包名称。
name: flutter_learn
#应用或包的描述、简介。
description: A new Flutter application.

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# Read more about versioning at semver.org.
#应用或包的版本号。
version: 1.0.0+1

environment:
  sdk: ">=2.0.0-dev.68.0 <3.0.0"
#3.0.3
#应用或包依赖的其它包或插件。
dependencies:
  flutter:
    sdk: flutter

  #设置国际化
  flutter_localizations:
    sdk: flutter

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^0.1.2
  #导入toast的依赖库
  toast: ^0.1.3
  #日期格式化依赖库
  date_format: ^1.0.6
  #三方日期选择器
  flutter_datetime_picker: ^1.2.6

  json_annotation: ^3.0.0

  #网络请求三方库
  dio: 3.0.3 #latest version
  #实现轮播图
  flutter_swiper: 1.1.6
  #持久化shared_preferences
  shared_preferences: 0.5.4+5
  #sqflite数据库
  sqflite: ^1.1.7+2
  #操作文件存储
  path_provider: ^1.4.2

  provider: ^3.1.0+1
  # 图片缓存 https://github.com/renefloor/flutter_cached_network_image
  cached_network_image: ^1.1.1

#开发环境依赖的工具包（而不是flutter应用本身依赖的包）。
dev_dependencies:
  flutter_test:
    sdk: flutter
  build_runner: ^1.7.1
  #json_serializable版本号
  json_serializable: ^3.2.3

# For information on the generic Dart part of this file, see the
# following page: https://www.dartlang.org/tools/pub/pubspec

#flutter相关的配置选项。
# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:

  assets:
    - images/2.0x/ic_recycle.png
    - images/3.0x/ic_recycle.png
    - images/a.jpg
    - images/ic_recycle.png

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.io/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.io/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.io/custom-fonts/#from-packages


#包管理知识整理：

# 涉及到包管理机制，yaml结尾的文件类似于android项目中的maninfast和gradle文件，实现项目属性的设置：

# name：应用或包名称。
#description: 应用或包的描述、简介。
#version：应用或包的版本号。
#dependencies：应用或包依赖的其它包或插件。
#dev_dependencies：开发环境依赖的工具包（而不是flutter应用本身依赖的包）。
#flutter：flutter相关的配置选项。

#包的依赖可以放置在dependencies/dev_dependencies之下：
#1.Pub仓库的依赖：Pub（https://pub.dartlang.org/ ）是Google官方的Dart Packages仓库，类似于node中的npm仓库，android中的jcenter。我们可以在Pub上面查找我们需要的包和插件，也可以向Pub发布我们的包和插件。
#我们将在后面的章节中介绍如何向Pub发布我们的包和插件。
#2.依赖本地包:
#dependencies:
#  pkg1:
#    path: ../../code/pkg1
#3.依赖Git：你也可以依赖存储在Git仓库中的包。如果软件包位于仓库的根目录中，请使用以下语法
#dependencies:
#  pkg1:
#    git:
#      url: git://github.com/xxx/pkg1.git
#上面假定包位于Git存储库的根目录中。如果不是这种情况，可以使用path参数指定相对位置，例如：
#dependencies:
#  package1:
#    git:
#      url: git://github.com/flutter/packages.git
#      path: packages/package1
